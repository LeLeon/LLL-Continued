PART
{
// Kerbal Space Program - Part Config


// --- general parameters ---
name = 2x1Greenhouse
module = Part
author = Lack

// --- asset parameters ---

MODEL
{
	model = LLL/Models/Utility/2x1Greenhouse/model
	texture = model000 , LLL/Models/Propulsion/LLL2x1/model000
	texture = model000334_NRM , LLL/Models/Propulsion/LLL2x1/model001_NRM
}

rescaleFactor = 1
scale = 1
rimFalloff = 5
// --- node definitions ---
node_stack_top = 0.0, 1.27125, 0.0, 0.0, 1.0, 0.0, 2
node_stack_bottom = 0.0, -1.27125, 0.0, 0.0, -1.0, 0.0, 2
node_attach = 0.0, 0.0, 0.625, 0.0, 0.0, -1.0
// --- editor parameters ---
TechRequired = composites // specializedConstruction
entryCost = 0
cost = 650
category = Utility
subcategory = 0
title = 2x1 Greenhouse
manufacturer = Lack Luster Labs
description = Plants; horrid things. Don't trust 'em one bit, what with their roots and their leaves. Clearly out to get us. All the more reason to shove them in here and dump them on another planet.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0 // 1,1,1,1,1

// --- standard part parameters ---
mass = 1.8
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2 // 0
crashTolerance = 12
breakingForce = 200
breakingTorque = 200
maxTemp = 2000 // 2400
fuelCrossFeed = True
bulkheadProfiles = 2x1
tags = lll lack 2x1 life support food ls tac

MODULE
{
   name = ModuleAnimateGeneric
   animationName = shutter
   isOneShot = false
   
	startEventGUIName = Extend Shutters
	endEventGUIName = Retract Shutters
	actionGUIName = Toggle Shutters
}

MODULE
{
	name = ModuleDeployableSolarPanel
	sunTracking = false
	raycastTransformName = Cube_001
	pivotName = Cube_001
	animationName = solarpanels
	isBreakable = false	
	resourceName = ElectricCharge
	chargeRate = 0.75
	powerCurve
 	{
		key = 206000000000 0 0 0
		key = 13599840256 1 0 0
		key = 68773560320 0.5 0 0
		key = 0 10 0 0
 	}
}
MODULE
{
	name = TacGenericConverter
	converterName = Greenhouse

	conversionRate = 4

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
	inputResources = Water, 0.25, CarbonDioxide, 1, Waste, 0.25, ElectricCharge, 0.75

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
	outputResources = Food, 1, false, Oxygen, 0.9, true
	}
}

}
